FROM {{ parent }}
LABEL MAINTAINER="Rasmus Munk <rasmus.munk@nbi.ku.dk>"

ARG SLURM_VERSION={{ SLURM_VERSION }}
ARG SLURM_DOWNLOAD_MD5={{ SLURM_DOWNLOAD_MD5 }}
ARG SLURM_DOWNLOAD_URL="https://download.schedmd.com/slurm/slurm-${SLURM_VERSION}.tar.bz2"
ARG OPENMPI_MAJOR_VERSION={{ OPENMPI_MAJOR_VERSION }}
ARG OPENMPI_MINOR_VERSION={{ OPENMPI_MINOR_VERSION }}
ARG OPENMPI_VERSION={{ OPENMPI_MAJOR_VERSION }}.{{ OPENMPI_MINOR_VERSION }}
ARG OPENMPI_DOWNLOAD_MD5={{ OPENMPI_DOWNLOAD_MD5 }}
ARG OPENMPI_DOWNLOAD_URL="https://download.open-mpi.org/release/open-mpi/v${OPENMPI_MAJOR_VERSION}/openmpi-${OPENMPI_VERSION}.tar.bz2"
ARG PACKAGE_TIMEOUT=60

USER root

# Setup default timeout of installing packages
RUN echo "[global]" > /etc/pip.conf \
    && echo "timeout=$PACKAGE_TIMEOUT" >> /etc/pip.conf

RUN groupadd -r slurm --gid=990 && useradd -r -g slurm --uid=990 slurm \
    && groupadd -r munge --gid=993 && useradd -r -g munge --uid=997 munge

# Dependencies
# build, slurm, openmpi, ldap
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    autotools-dev \
    cgdb \
    cmake-curses-gui \
    csh \
    g++ \
    g++-11 \
    g++-12 \
    gcc \
    gcc-11 \
    gcc-12 \
    iputils-ping \
    ldap-utils \
    libhdf5-dev \
    libhdf5-doc \
    libmunge-dev \
    libnss-ldap \
    libpam-ldap \
    libslurm-dev \
    munge \
    python3-h5py \
    supervisor \
    tcsh \
    libgsl-dev \
    gsl-bin \
    libfftw3-dev \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# https://apptainer.org/docs/admin/main/installation.html#install-ubuntu-packages
# installing apptainer in ubuntu
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    software-properties-common \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN add-apt-repository -y ppa:apptainer/ppa \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
    apptainer \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && fix-permissions $CONDA_DIR \
    && fix-permissions /home/$NB_USER \
    && chown -R ${NB_UID}:${NB_GID} /home/$NB_USER

WORKDIR /tmp

# By default the HDF5 library disables deprecated symbols
# We keep them in to maintain compatability
# Therefore we uncomment the following line
# /* #undef H5_NO_DEPRECATED_SYMBOLS */
RUN sed -i "s/\/\* #undef H5_NO_DEPRECATED_SYMBOLS \*\//#undef H5_NO_DEPRECATED_SYMBOLS/g" /usr/include/hdf5/serial/H5pubconf.h

RUN cd \
    && wget -O slurm.tar.bz2 "${SLURM_DOWNLOAD_URL}" \
    && echo "${SLURM_DOWNLOAD_MD5}" slurm.tar.bz2 | md5sum -c - \
    && mkdir -p /usr/local/src/slurm \
    && tar jxf slurm.tar.bz2 -C /usr/local/src/slurm --strip-components=1 \
    && cd /usr/local/src/slurm \
    && ./configure --enable-debug --prefix=/usr --sysconfdir=/etc/slurm \
        --libdir=/usr/lib \
    && make install \
    && cd \
    && rm -f slurm.tar.bz2

# OpenMPI
RUN cd \
    && wget -O openmpi.tar.bz2 "${OPENMPI_DOWNLOAD_URL}" \
    && echo "${OPENMPI_DOWNLOAD_MD5}" openmpi.tar.bz2 | md5sum -c - \
    && mkdir -p /opt/openmpi-${OPENMPI_VERSION} \
    && tar jxf openmpi.tar.bz2 -C /opt/openmpi-${OPENMPI_VERSION} --strip-components=1 \
    && cd /opt/openmpi-${OPENMPI_VERSION} \
    && ./configure --prefix=/opt/openmpi-${OPENMPI_VERSION} \
    && make install \
    && cd \
    && rm -f openmpi.tar.bz2

ENV PATH="/opt/openmpi-${OPENMPI_VERSION}/bin:${PATH}"
ENV LD_LIBRARY_PATH="/opt/openmpi-${OPENMPI_VERSION}/lib:${LD_LIBRARY_PATH}"
# Update the Python3 environment path to include the OpenMPI path
RUN mamba run -n python3 python3 /usr/local/bin/update_kernel_spec.py python3 --env-kwargs PATH=$PATH \
    && fix-permissions $CONDA_DIR \
    && fix-permissions /home/$NB_USER

# Munge
# Required directories
RUN mkdir -p /var/run/munge \
    && chown -R munge:munge /var/run/munge \
    && chown -R munge:munge /var/log/munge \
    && chmod -R 770 /var/log/munge

RUN mkdir -p /var/spool/slurmd \
    && chown -R slurm:slurm /var/spool/slurmd \
    && chmod 775 /var/spool/slurmd

USER ${NB_UID}

RUN conda config --set remote_read_timeout_secs $PACKAGE_TIMEOUT
ENV CLING_PATH=$CONDA_DIR/envs/cling

# Install the MODI-Helper-Scripts systemwide such that every environment and 
# inherriting images can use them
RUN jupyterlab_pip3 install git+https://github.com/ucphhpc/modi-helper-scripts.git

# Install packages for python3 envs
COPY requirements.txt /tmp/
RUN mamba run -n python3 pip install -r /tmp/requirements.txt \
    && mamba clean -y --all

# Add cling kernel
# https://github.com/QuantStack/xeus-cling
COPY environment.yml /tmp/
RUN mamba env create -n cling -f /tmp/environment.yml \
    && mamba clean --all -f -y \
    && rm -fr /tmp/tmp*

ENV CXX_PATH=$CONDA_DIR/envs/cling
RUN cp -R $CXX_PATH/share/jupyter/kernels/* $CONDA_DIR/share/jupyter/kernels/

# Add the cling environment to the jupyter kernel path
RUN mamba run -n cling python3 /usr/local/bin/update_kernel_spec.py cling --env-kwargs PATH=$CLING_PATH/bin:$PATH

# TODO, Add PySlurm (Python interface to slurm) requires Cython
# Requires slurm 19.05
USER root

# Prepare supervisord state dirs
RUN mkdir -p /var/log/supervisord /var/run/supervisord \
    && chown -R ${NB_UID}:${NB_GID} /var/log/supervisord \
    && chown -R ${NB_UID}:${NB_GID} /var/run/supervisord \
    && chmod 775 /var/log/supervisord \
    && chmod 775 /var/run/supervisord

COPY supervisord.conf /etc/supervisor/supervisord.conf
RUN chown ${NB_UID}:${NB_GID} /etc/supervisor/supervisord.conf \
    && chmod 775 /etc/supervisor/supervisord.conf

WORKDIR "${HOME}"

# Ensure that the common MPI library is loaded
ENV LD_LIBRARY_PATH="/usr/lib/x86_64-linux-gnu:${LD_LIBRARY_PATH}"
# Environment variable that can be used to specify
# start-notebook.py arguments when it is launched by supervisord
ENV NOTEBOOK_START_ARGUMENTS=""

USER root
# As an exception, run as root,
# Remember to use supervisord start-notebook.sh to
# de-escalate privileges to ${NB_UID}:${NB_GID}
# We need to overwrite https://github.com/jupyter/docker-stacks/blob/ce08d9e3483fdc8bc661ef0f33ee888d0b434fcd/images/docker-stacks-foundation/Dockerfile#L130
# to ensure that supervisord starts before jupyter
ENTRYPOINT ["tini", "-g", "--", "/usr/bin/supervisord", "-c", "/etc/supervisor/supervisord.conf"]
