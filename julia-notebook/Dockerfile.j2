FROM {{ parent }}
LABEL MAINTAINER="Sebastian Larsen Prehn <slp@erda.dk>"

ARG JULIA_MAJOR_VERSION={{ JULIA_MAJOR_VERSION }}
ARG JULIA_MINOR_VERSION={{ JULIA_MINOR_VERSION }}
ARG JULIA_VERSION={{ JULIA_MAJOR_VERSION }}.{{ JULIA_MINOR_VERSION }}
ARG JULIA_DOWNLOAD_MD5={{ JULIA_DOWNLOAD_MD5 }}
ARG JULIA_DOWNLOAD_URL="https://julialang-s3.julialang.org/bin/linux/x64/${JULIA_MAJOR_VERSION}/julia-${JULIA_VERSION}-linux-x86_64.tar.gz"
ARG PACKAGE_TIMEOUT=60

ENV JULIA_PATH=/opt/julia

# From https://discourse.julialang.org/t/unexpected-precompilation-in-binder-based-on-docker-image/114473/2
# Set `JULIA_CPU_TARGET` to same value as default Julia builds, to ensure we
# don't specialise pkgimages to the current host CPU:
# https://github.com/JuliaCI/julia-buildkite/blob/f70c9abc11abbf8c373c0cb9f8a7f8e3b165cced/utilities/build_envs.sh#L24-L31
ENV JULIA_CPU_TARGET="generic;icelake-server,clone_all;znver3,clone_all;znver2,clone_all;skylake-avx512,clone_all"

USER root

# Setup default timeout of installing packages
RUN echo "[global]" > /etc/pip.conf \
    && echo "timeout=${PACKAGE_TIMEOUT}" >> /etc/pip.conf

WORKDIR /tmp

# Download and install Julia
RUN wget -O julia.tar.gz "${JULIA_DOWNLOAD_URL}" \
    && echo "${JULIA_DOWNLOAD_MD5}" julia.tar.gz | md5sum -c - \
    && mkdir -p ${JULIA_PATH} \
    && tar zxvf julia.tar.gz -C ${JULIA_PATH} --strip-component 1 \
    && rm -f julia.tar.gz

USER $NB_UID
# Update the general PATH to also include the julia bin
ENV PATH=${JULIA_PATH}/bin:${PATH}

# Install custom packages
COPY packages.jl /tmp/
RUN julia packages.jl

WORKDIR "${HOME}"

# Ensure that container Runs as
USER $NB_UID
